- name: Init service
  file:
    path: "{{ openldap_home }}"
    state: directory

- name: Docker-compose file creation
  template:
    src: docker-compose.yaml.j2
    dest: "{{ openldap_home }}/docker-compose.yaml"

- name: Start service
  community.docker.docker_compose:
    project_src: "{{ openldap_home }}"

- name: Wait for starting
  wait_for:
    port: 1389

- name: LDIF base file creation
  template:
    src: base.ldif.j2
    dest: "{{ openldap_home }}/base.ldif"

- name: Check if LDAP is available
  wait_for:
    host: localhost
    port: 1389
    state: started

- name: Verify base entry
  command: ldapsearch -H {{ openldap_server }} -D 'cn={{ openldap_admin_username }},{{ openldap_root }}' -x -w {{ openldap_admin_password }} -b '{{ openldap_root }}'
  register: base_entry_check
  ignore_errors: true

- name: Define base entry if not exists
  command: ldapadd -H {{ openldap_server }} -D 'cn={{ openldap_admin_username }},{{ openldap_root }}' -x -w {{ openldap_admin_password }} -f {{ openldap_home }}/base.ldif
  when: base_entry_check.rc != 0

- name: Is running ?
  command: ldapvi -h {{ openldap_server }} -D 'cn={{ openldap_admin_username }},{{ openldap_root }}' -b '{{ openldap_root }}'

- name: LDIF user file creation
  template:
    src: file.ldif.j2
    dest: "{{ openldap_home }}/file.ldif"

- name: Check if entries exist
  command: ldapsearch -H {{ openldap_server }} -D 'cn={{ openldap_admin_username }},{{ openldap_root }}' -w {{ openldap_admin_password }} -b '{{ openldap_root }}' -s base '(objectClass=*)'
  register: entries_check
  ignore_errors: true

- name: Add entries if not exist
  command: ldapadd -H {{ openldap_server }} -D 'cn={{ openldap_admin_username }},{{ openldap_root }}' -x -w {{ openldap_admin_password }} -f {{ openldap_home }}/file.ldif
  when: entries_check.rc != 0
